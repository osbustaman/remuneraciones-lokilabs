!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.mapboxGlDrawSnapMode=e():t.mapboxGlDrawSnapMode=e()}(this,(function(){return(()=>{var t={613:t=>{function e(t){if(!(this instanceof e))return new e(t);this._bbox=t||[1/0,1/0,-1/0,-1/0],this._valid=!!t}t.exports=e,e.prototype.include=function(t){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],t[0]),this._bbox[1]=Math.min(this._bbox[1],t[1]),this._bbox[2]=Math.max(this._bbox[2],t[0]),this._bbox[3]=Math.max(this._bbox[3],t[1]),this},e.prototype.equals=function(t){var r;return r=t instanceof e?t.bbox():t,this._bbox[0]==r[0]&&this._bbox[1]==r[1]&&this._bbox[2]==r[2]&&this._bbox[3]==r[3]},e.prototype.center=function(t){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},e.prototype.union=function(t){var r;return this._valid=!0,r=t instanceof e?t.bbox():t,this._bbox[0]=Math.min(this._bbox[0],r[0]),this._bbox[1]=Math.min(this._bbox[1],r[1]),this._bbox[2]=Math.max(this._bbox[2],r[2]),this._bbox[3]=Math.max(this._bbox[3],r[3]),this},e.prototype.bbox=function(){return this._valid?this._bbox:null},e.prototype.contains=function(t){if(!t)return this._fastContains();if(!this._valid)return null;var e=t[0],r=t[1];return this._bbox[0]<=e&&this._bbox[1]<=r&&this._bbox[2]>=e&&this._bbox[3]>=r},e.prototype.intersect=function(t){return this._valid?(r=t instanceof e?t.bbox():t,!(this._bbox[0]>r[2]||this._bbox[2]<r[0]||this._bbox[3]<r[1]||this._bbox[1]>r[3])):null;var r},e.prototype._fastContains=function(){if(!this._valid)return new Function("return null;");var t="return "+this._bbox[0]+"<= ll[0] &&"+this._bbox[1]+"<= ll[1] &&"+this._bbox[2]+">= ll[0] &&"+this._bbox[3]+">= ll[1]";return new Function("ll",t)},e.prototype.polygon=function(){return this._valid?{type:"Polygon",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null}},829:t=>{t.exports=function(t){return function t(e){if(Array.isArray(e)&&e.length&&"number"==typeof e[0])return[e];return e.reduce((function(e,r){return Array.isArray(r)&&Array.isArray(r[0])?e.concat(t(r)):(e.push(r),e)}),[])}(t)}},506:(t,e,r)=>{var n=r(340),o=r(63),i=r(829);t.exports=function(t){if(!t)return[];var e=o(n(t)),r=[];return e.features.forEach((function(t){t.geometry&&(r=r.concat(i(t.geometry.coordinates)))})),r}},319:(t,e,r)=>{var n=r(506),o=r(692),i=r(613),a={features:["FeatureCollection"],coordinates:["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],geometry:["Feature"],geometries:["GeometryCollection"]},s=Object.keys(a);function l(t){for(var e=i(),r=n(t),o=0;o<r.length;o++)e.include(r[o]);return e}t.exports=function(t){return l(t).bbox()},t.exports.polygon=function(t){return l(t).polygon()},t.exports.bboxify=function(t){return o(t).map((function(t){t&&(s.some((function(e){return!!t[e]&&-1!==a[e].indexOf(t.type)}))&&(t.bbox=l(t).bbox(),this.update(t)))}))}},340:t=>{t.exports=function(t){if(!t||!t.type)return null;var r=e[t.type];if(!r)return null;if("geometry"===r)return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:t}]};if("feature"===r)return{type:"FeatureCollection",features:[t]};if("featurecollection"===r)return t};var e={Point:"geometry",MultiPoint:"geometry",LineString:"geometry",MultiLineString:"geometry",Polygon:"geometry",MultiPolygon:"geometry",GeometryCollection:"geometry",Feature:"feature",FeatureCollection:"featurecollection"}},63:(t,e,r)=>{"use strict";function n(t){switch(t&&t.type||null){case"FeatureCollection":return t.features=t.features.reduce((function(t,e){return t.concat(n(e))}),[]),t;case"Feature":return t.geometry?n(t.geometry).map((function(e){var r={type:"Feature",properties:JSON.parse(JSON.stringify(t.properties)),geometry:e};return void 0!==t.id&&(r.id=t.id),r})):[t];case"MultiPoint":return t.coordinates.map((function(t){return{type:"Point",coordinates:t}}));case"MultiPolygon":return t.coordinates.map((function(t){return{type:"Polygon",coordinates:t}}));case"MultiLineString":return t.coordinates.map((function(t){return{type:"LineString",coordinates:t}}));case"GeometryCollection":return t.geometries.map(n).reduce((function(t,e){return t.concat(e)}),[]);case"Point":case"Polygon":case"LineString":return[t]}}r.r(e),r.d(e,{default:()=>n})},692:t=>{var e=t.exports=function(t){return new r(t)};function r(t){this.value=t}function n(t,e,r){var n=[],a=[],u=!0;return function t(p){var f=r?o(p):p,d={},h=!0,g={node:f,node_:p,path:[].concat(n),parent:a[a.length-1],parents:a,key:n.slice(-1)[0],isRoot:0===n.length,level:n.length,circular:null,update:function(t,e){g.isRoot||(g.parent.node[g.key]=t),g.node=t,e&&(h=!1)},delete:function(t){delete g.parent.node[g.key],t&&(h=!1)},remove:function(t){s(g.parent.node)?g.parent.node.splice(g.key,1):delete g.parent.node[g.key],t&&(h=!1)},keys:null,before:function(t){d.before=t},after:function(t){d.after=t},pre:function(t){d.pre=t},post:function(t){d.post=t},stop:function(){u=!1},block:function(){h=!1}};if(!u)return g;function y(){if("object"==typeof g.node&&null!==g.node){g.keys&&g.node_===g.node||(g.keys=i(g.node)),g.isLeaf=0==g.keys.length;for(var t=0;t<a.length;t++)if(a[t].node_===p){g.circular=a[t];break}}else g.isLeaf=!0,g.keys=null;g.notLeaf=!g.isLeaf,g.notRoot=!g.isRoot}y();var m=e.call(g,g.node);return void 0!==m&&g.update&&g.update(m),d.before&&d.before.call(g,g.node),h?("object"!=typeof g.node||null===g.node||g.circular||(a.push(g),y(),l(g.keys,(function(e,o){n.push(e),d.pre&&d.pre.call(g,g.node[e],e);var i=t(g.node[e]);r&&c.call(g.node,e)&&(g.node[e]=i.node),i.isLast=o==g.keys.length-1,i.isFirst=0==o,d.post&&d.post.call(g,i),n.pop()})),a.pop()),d.after&&d.after.call(g,g.node),g):g}(t).node}function o(t){if("object"==typeof t&&null!==t){var e;if(s(t))e=[];else if("[object Date]"===a(t))e=new Date(t.getTime?t.getTime():t);else if(function(t){return"[object RegExp]"===a(t)}(t))e=new RegExp(t);else if(function(t){return"[object Error]"===a(t)}(t))e={message:t.message};else if(function(t){return"[object Boolean]"===a(t)}(t))e=new Boolean(t);else if(function(t){return"[object Number]"===a(t)}(t))e=new Number(t);else if(function(t){return"[object String]"===a(t)}(t))e=new String(t);else if(Object.create&&Object.getPrototypeOf)e=Object.create(Object.getPrototypeOf(t));else if(t.constructor===Object)e={};else{var r=t.constructor&&t.constructor.prototype||t.__proto__||{},n=function(){};n.prototype=r,e=new n}return l(i(t),(function(r){e[r]=t[r]})),e}return t}r.prototype.get=function(t){for(var e=this.value,r=0;r<t.length;r++){var n=t[r];if(!e||!c.call(e,n)){e=void 0;break}e=e[n]}return e},r.prototype.has=function(t){for(var e=this.value,r=0;r<t.length;r++){var n=t[r];if(!e||!c.call(e,n))return!1;e=e[n]}return!0},r.prototype.set=function(t,e){for(var r=this.value,n=0;n<t.length-1;n++){var o=t[n];c.call(r,o)||(r[o]={}),r=r[o]}return r[t[n]]=e,e},r.prototype.map=function(t){return n(this.value,t,!0)},r.prototype.forEach=function(t){return this.value=n(this.value,t,!1),this.value},r.prototype.reduce=function(t,e){var r=1===arguments.length,n=r?this.value:e;return this.forEach((function(e){this.isRoot&&r||(n=t.call(this,n,e))})),n},r.prototype.paths=function(){var t=[];return this.forEach((function(e){t.push(this.path)})),t},r.prototype.nodes=function(){var t=[];return this.forEach((function(e){t.push(this.node)})),t},r.prototype.clone=function(){var t=[],e=[];return function r(n){for(var a=0;a<t.length;a++)if(t[a]===n)return e[a];if("object"==typeof n&&null!==n){var s=o(n);return t.push(n),e.push(s),l(i(n),(function(t){s[t]=r(n[t])})),t.pop(),e.pop(),s}return n}(this.value)};var i=Object.keys||function(t){var e=[];for(var r in t)e.push(r);return e};function a(t){return Object.prototype.toString.call(t)}var s=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)},l=function(t,e){if(t.forEach)return t.forEach(e);for(var r=0;r<t.length;r++)e(t[r],r,t)};l(i(r.prototype),(function(t){e[t]=function(e){var n=[].slice.call(arguments,1),o=new r(e);return o[t].apply(o,n)}}));var c=Object.hasOwnProperty||function(t,e){return e in t}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={exports:{}};return t[n](i,i.exports,r),i.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};return(()=>{"use strict";r.r(n),r.d(n,{SnapDirectSelect:()=>Be,SnapLineMode:()=>de,SnapModeDrawStyles:()=>ze,SnapPointMode:()=>ne,SnapPolygonMode:()=>we});var t={};r.r(t),r.d(t,{LAT_MAX:()=>y,LAT_MIN:()=>h,LAT_RENDERED_MAX:()=>m,LAT_RENDERED_MIN:()=>g,LNG_MAX:()=>v,LNG_MIN:()=>b,activeStates:()=>f,classes:()=>e,cursors:()=>i,events:()=>c,geojsonTypes:()=>s,interactions:()=>d,meta:()=>p,modes:()=>l,sources:()=>o,types:()=>a,updateActions:()=>u});const e={CONTROL_BASE:"mapboxgl-ctrl",CONTROL_PREFIX:"mapboxgl-ctrl-",CONTROL_BUTTON:"mapbox-gl-draw_ctrl-draw-btn",CONTROL_BUTTON_LINE:"mapbox-gl-draw_line",CONTROL_BUTTON_POLYGON:"mapbox-gl-draw_polygon",CONTROL_BUTTON_POINT:"mapbox-gl-draw_point",CONTROL_BUTTON_TRASH:"mapbox-gl-draw_trash",CONTROL_BUTTON_COMBINE_FEATURES:"mapbox-gl-draw_combine",CONTROL_BUTTON_UNCOMBINE_FEATURES:"mapbox-gl-draw_uncombine",CONTROL_GROUP:"mapboxgl-ctrl-group",ATTRIBUTION:"mapboxgl-ctrl-attrib",ACTIVE_BUTTON:"active",BOX_SELECT:"mapbox-gl-draw_boxselect"},o={HOT:"mapbox-gl-draw-hot",COLD:"mapbox-gl-draw-cold"},i={ADD:"add",MOVE:"move",DRAG:"drag",POINTER:"pointer",NONE:"none"},a={POLYGON:"polygon",LINE:"line_string",POINT:"point"},s={FEATURE:"Feature",POLYGON:"Polygon",LINE_STRING:"LineString",POINT:"Point",FEATURE_COLLECTION:"FeatureCollection",MULTI_PREFIX:"Multi",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon"},l={DRAW_LINE_STRING:"draw_line_string",DRAW_POLYGON:"draw_polygon",DRAW_POINT:"draw_point",SIMPLE_SELECT:"simple_select",DIRECT_SELECT:"direct_select",STATIC:"static"},c={CREATE:"draw.create",DELETE:"draw.delete",UPDATE:"draw.update",SELECTION_CHANGE:"draw.selectionchange",MODE_CHANGE:"draw.modechange",ACTIONABLE:"draw.actionable",RENDER:"draw.render",COMBINE_FEATURES:"draw.combine",UNCOMBINE_FEATURES:"draw.uncombine"},u={MOVE:"move",CHANGE_COORDINATES:"change_coordinates"},p={FEATURE:"feature",MIDPOINT:"midpoint",VERTEX:"vertex"},f={ACTIVE:"true",INACTIVE:"false"},d=["scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate"],h=-90,g=-85,y=90,m=85,b=-270,v=270,E={enable(t){setTimeout((()=>{t.map&&t.map.doubleClickZoom&&t._ctx&&t._ctx.store&&t._ctx.store.getInitialConfigValue&&t._ctx.store.getInitialConfigValue("doubleClickZoom")&&t.map.doubleClickZoom.enable()}),0)},disable(t){setTimeout((()=>{t.map&&t.map.doubleClickZoom&&t.map.doubleClickZoom.disable()}),0)}};function w(t){return function(e){const r=e.featureTarget;return!!r&&(!!r.properties&&r.properties.meta===t)}}function x(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===f.ACTIVE&&t.featureTarget.properties.meta===p.FEATURE))}function P(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===f.INACTIVE&&t.featureTarget.properties.meta===p.FEATURE))}function O(t){return void 0===t.featureTarget}function M(t){const e=t.featureTarget;return!!e&&(!!e.properties&&e.properties.meta===p.VERTEX)}function _(t){return!!t.originalEvent&&!0===t.originalEvent.shiftKey}function S(t){return 27===t.keyCode}function L(t){return 13===t.keyCode}const C={onSetup:function(){const t=this.newFeature({type:s.FEATURE,properties:{},geometry:{type:s.POINT,coordinates:[]}});return this.addFeature(t),this.clearSelectedFeatures(),this.updateUIClasses({mouse:i.ADD}),this.activateUIButton(a.POINT),this.setActionableState({trash:!0}),{point:t}},stopDrawingAndRemove:function(t){this.deleteFeature([t.point.id],{silent:!0}),this.changeMode(l.SIMPLE_SELECT)}};C.onTap=C.onClick=function(t,e){this.updateUIClasses({mouse:i.MOVE}),t.point.updateCoordinate("",e.lngLat.lng,e.lngLat.lat),this.map.fire(c.CREATE,{features:[t.point.toGeoJSON()]}),this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.point.id]})},C.onStop=function(t){this.activateUIButton(),t.point.getCoordinate().length||this.deleteFeature([t.point.id],{silent:!0})},C.toDisplayFeatures=function(t,e,r){const n=e.properties.id===t.point.id;if(e.properties.active=n?f.ACTIVE:f.INACTIVE,!n)return r(e)},C.onTrash=C.stopDrawingAndRemove,C.onKeyUp=function(t,e){if(S(e)||L(e))return this.stopDrawingAndRemove(t,e)};const T=C;var I=6371008.8,A={meters:I,metres:I,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:I/1852,inches:39.37*I,yards:5825721.287490856,feet:20902260.511392,radians:1,degrees:57.22891354143274};function N(t,e,r){if(!Y(r=r||{}))throw new Error("options is invalid");var n=r.bbox,o=r.id;if(void 0===t)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");n&&$(n),o&&q(o);var i={type:"Feature"};return o&&(i.id=o),n&&(i.bbox=n),i.properties=e||{},i.geometry=t,i}function F(t,e,r){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!X(t[0])||!X(t[1]))throw new Error("coordinates must contain numbers");return N({type:"Point",coordinates:t},e,r)}function j(t,e,r){if(!t)throw new Error("coordinates is required");for(var n=0;n<t.length;n++){var o=t[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var i=0;i<o[o.length-1].length;i++){if(0===n&&0===i&&!X(o[0][0])||!X(o[0][1]))throw new Error("coordinates must contain numbers");if(o[o.length-1][i]!==o[0][i])throw new Error("First and last Position are not equivalent.")}}return N({type:"Polygon",coordinates:t},e,r)}function D(t,e,r){if(!t)throw new Error("coordinates is required");if(t.length<2)throw new Error("coordinates must be an array of two or more positions");if(!X(t[0][1])||!X(t[0][1]))throw new Error("coordinates must contain numbers");return N({type:"LineString",coordinates:t},e,r)}function R(t,e){if(!Y(e=e||{}))throw new Error("options is invalid");var r=e.bbox,n=e.id;if(!t)throw new Error("No features passed");if(!Array.isArray(t))throw new Error("features must be an Array");r&&$(r),n&&q(n);var o={type:"FeatureCollection"};return n&&(o.id=n),r&&(o.bbox=r),o.features=t,o}function k(t,e,r){if(!t)throw new Error("coordinates is required");return N({type:"MultiLineString",coordinates:t},e,r)}function U(t,e){if(null==t)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=A[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t*r}function V(t,e){if(null==t)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=A[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t/r}function B(t){if(null==t)throw new Error("radians is required");return 180*(t%(2*Math.PI))/Math.PI}function G(t){if(null==t)throw new Error("degrees is required");return t%360*Math.PI/180}function X(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function Y(t){return!!t&&t.constructor===Object}function $(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!X(t))throw new Error("bbox must only contain numbers")}))}function q(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}const J=function(t){$(t);var e=Number(t[0]),r=Number(t[1]),n=Number(t[2]),o=Number(t[3]);if(6===t.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var i=[e,r];return j([[i,[n,r],[n,o],[e,o],i]])};function z(t){if(!t)throw new Error("obj is required");var e=Z(t);if(e.length>1&&X(e[0])&&X(e[1]))return e;throw new Error("Coordinate is not a valid Point")}function Z(t){if(!t)throw new Error("obj is required");var e;if(t.length?e=t:t.coordinates?e=t.coordinates:t.geometry&&t.geometry.coordinates&&(e=t.geometry.coordinates),e)return H(e),e;throw new Error("No valid coordinates")}function H(t){if(t.length>1&&X(t[0])&&X(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return H(t[0]);throw new Error("coordinates must only contain numbers")}function K(t,e,r){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var o=0,i=e.length-1;o<e.length;i=o++){var a=e[o][0],s=e[o][1],l=e[i][0],c=e[i][1];if(t[1]*(a-l)+s*(l-t[0])+c*(t[0]-a)==0&&(a-t[0])*(l-t[0])<=0&&(s-t[1])*(c-t[1])<=0)return!r;s>t[1]!=c>t[1]&&t[0]<(l-a)*(t[1]-s)/(c-s)+a&&(n=!n)}return n}const W=function(t,e,r){if("object"!=typeof(r=r||{}))throw new Error("options is invalid");var n=r.ignoreBoundary;if(!t)throw new Error("point is required");if(!e)throw new Error("polygon is required");var o=z(t),i=Z(e),a=e.geometry?e.geometry.type:e.type,s=e.bbox;if(s&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(o,s))return!1;"Polygon"===a&&(i=[i]);for(var l=0,c=!1;l<i.length&&!c;l++)if(K(o,i[l][0],n)){for(var u=!1,p=1;p<i[l].length&&!u;)K(o,i[l][p],!n)&&(u=!0),p++;u||(c=!0)}return c};function Q(t,e,r){if(null!==t)for(var n,o,i,a,s,l,c,u,p=0,f=0,d=t.type,h="FeatureCollection"===d,g="Feature"===d,y=h?t.features.length:1,m=0;m<y;m++){s=(u=!!(c=h?t.features[m].geometry:g?t.geometry:t)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var b=0;b<s;b++){var v=0,E=0;if(null!==(a=u?c.geometries[b]:c)){l=a.coordinates;var w=a.type;switch(p=!r||"Polygon"!==w&&"MultiPolygon"!==w?0:1,w){case null:break;case"Point":e(l,f,m,v,E),f++,v++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++)e(l[n],f,m,v,E),f++,"MultiPoint"===w&&v++;"LineString"===w&&v++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(o=0;o<l[n].length-p;o++)e(l[n][o],f,m,v,E),f++;"MultiLineString"===w&&v++,"Polygon"===w&&E++}"Polygon"===w&&v++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for("MultiPolygon"===w&&(E=0),o=0;o<l[n].length;o++){for(i=0;i<l[n][o].length-p;i++)e(l[n][o][i],f,m,v,E),f++;E++}v++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)Q(a.geometries[n],e,r);break;default:throw new Error("Unknown Geometry Type")}}}}}function tt(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var r=0;r<t.features.length;r++)e(t.features[r],r)}function et(t,e){var r,n,o,i,a,s,l,c,u,p,f=0,d="FeatureCollection"===t.type,h="Feature"===t.type,g=d?t.features.length:1;for(r=0;r<g;r++){for(s=d?t.features[r].geometry:h?t.geometry:t,c=d?t.features[r].properties:h?t.properties:{},u=d?t.features[r].bbox:h?t.bbox:void 0,p=d?t.features[r].id:h?t.id:void 0,a=(l=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=l?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(i,f,c,u,p);break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)e(i.geometries[n],f,c,u,p);break;default:throw new Error("Unknown Geometry Type")}else e(null,f,c,u,p);f++}}function rt(t,e){et(t,(function(t,r,n,o,i){var a,s=null===t?null:t.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return void e(N(t,n,{bbox:o,id:i}),r,0)}switch(s){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}t.coordinates.forEach((function(t,o){e(N({type:a,coordinates:t},n),r,o)}))}))}function nt(t,e,r,n,o){for(;n>r;){if(n-r>600){var i=n-r+1,a=e-r+1,s=Math.log(i),l=.5*Math.exp(2*s/3),c=.5*Math.sqrt(s*l*(i-l)/i)*(a-i/2<0?-1:1);nt(t,e,Math.max(r,Math.floor(e-a*l/i+c)),Math.min(n,Math.floor(e+(i-a)*l/i+c)),o)}var u=t[e],p=r,f=n;for(ot(t,r,e),o(t[n],u)>0&&ot(t,r,n);p<f;){for(ot(t,p,f),p++,f--;o(t[p],u)<0;)p++;for(;o(t[f],u)>0;)f--}0===o(t[r],u)?ot(t,r,f):ot(t,++f,n),f<=e&&(r=f+1),e<=f&&(n=f-1)}}function ot(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function it(t,e){return t<e?-1:t>e?1:0}const at=function(t,e,r,n,o){nt(t,e,r||0,n||t.length-1,o||it)};function st(t,e){if(!(this instanceof st))return new st(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function lt(t,e,r){if(!r)return e.indexOf(t);for(var n=0;n<e.length;n++)if(r(t,e[n]))return n;return-1}function ct(t,e){ut(t,0,t.children.length,e,t)}function ut(t,e,r,n,o){o||(o=bt(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=e;a<r;a++)i=t.children[a],pt(o,t.leaf?n(i):i);return o}function pt(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function ft(t,e){return t.minX-e.minX}function dt(t,e){return t.minY-e.minY}function ht(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function gt(t){return t.maxX-t.minX+(t.maxY-t.minY)}function yt(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function mt(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function bt(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function vt(t,e,r,n,o){for(var i,a=[e,r];a.length;)(r=a.pop())-(e=a.pop())<=n||(i=e+Math.ceil((r-e)/n/2)*n,at(t,i,e,r,o),a.push(e,i,i,r))}st.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,r=[],n=this.toBBox;if(!mt(t,e))return r;for(var o,i,a,s,l=[];e;){for(o=0,i=e.children.length;o<i;o++)a=e.children[o],mt(t,s=e.leaf?n(a):a)&&(e.leaf?r.push(a):yt(t,s)?this._all(a,r):l.push(a));e=l.pop()}return r},collides:function(t){var e=this.data,r=this.toBBox;if(!mt(t,e))return!1;for(var n,o,i,a,s=[];e;){for(n=0,o=e.children.length;n<o;n++)if(i=e.children[n],mt(t,a=e.leaf?r(i):i)){if(e.leaf||yt(t,a))return!0;s.push(i)}e=s.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,r=t.length;e<r;e++)this.insert(t[e]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=bt([]),this},remove:function(t,e){if(!t)return this;for(var r,n,o,i,a=this.data,s=this.toBBox(t),l=[],c=[];a||l.length;){if(a||(a=l.pop(),n=l[l.length-1],r=c.pop(),i=!0),a.leaf&&-1!==(o=lt(t,a.children,e)))return a.children.splice(o,1),l.push(a),this._condense(l),this;i||a.leaf||!yt(a,s)?n?(r++,a=n.children[r],i=!1):a=null:(l.push(a),c.push(r),r=0,n=a,a=a.children[0])}return this},toBBox:function(t){return t},compareMinX:ft,compareMinY:dt,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var r=[];t;)t.leaf?e.push.apply(e,t.children):r.push.apply(r,t.children),t=r.pop();return e},_build:function(t,e,r,n){var o,i=r-e+1,a=this._maxEntries;if(i<=a)return ct(o=bt(t.slice(e,r+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(a)),a=Math.ceil(i/Math.pow(a,n-1))),(o=bt([])).leaf=!1,o.height=n;var s,l,c,u,p=Math.ceil(i/a),f=p*Math.ceil(Math.sqrt(a));for(vt(t,e,r,f,this.compareMinX),s=e;s<=r;s+=f)for(vt(t,s,c=Math.min(s+f-1,r),p,this.compareMinY),l=s;l<=c;l+=p)u=Math.min(l+p-1,c),o.children.push(this._build(t,l,u,n-1));return ct(o,this.toBBox),o},_chooseSubtree:function(t,e,r,n){for(var o,i,a,s,l,c,u,p,f,d;n.push(e),!e.leaf&&n.length-1!==r;){for(u=p=1/0,o=0,i=e.children.length;o<i;o++)l=ht(a=e.children[o]),f=t,d=a,(c=(Math.max(d.maxX,f.maxX)-Math.min(d.minX,f.minX))*(Math.max(d.maxY,f.maxY)-Math.min(d.minY,f.minY))-l)<p?(p=c,u=l<u?l:u,s=a):c===p&&l<u&&(u=l,s=a);e=s||e.children[0]}return e},_insert:function(t,e,r){var n=this.toBBox,o=r?t:n(t),i=[],a=this._chooseSubtree(o,this.data,e,i);for(a.children.push(t),pt(a,o);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(o,i,e)},_split:function(t,e){var r=t[e],n=r.children.length,o=this._minEntries;this._chooseSplitAxis(r,o,n);var i=this._chooseSplitIndex(r,o,n),a=bt(r.children.splice(i,r.children.length-i));a.height=r.height,a.leaf=r.leaf,ct(r,this.toBBox),ct(a,this.toBBox),e?t[e-1].children.push(a):this._splitRoot(r,a)},_splitRoot:function(t,e){this.data=bt([t,e]),this.data.height=t.height+1,this.data.leaf=!1,ct(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,r){var n,o,i,a,s,l,c,u,p,f,d,h,g,y;for(l=c=1/0,n=e;n<=r-e;n++)o=ut(t,0,n,this.toBBox),i=ut(t,n,r,this.toBBox),p=o,f=i,d=void 0,h=void 0,g=void 0,y=void 0,d=Math.max(p.minX,f.minX),h=Math.max(p.minY,f.minY),g=Math.min(p.maxX,f.maxX),y=Math.min(p.maxY,f.maxY),a=Math.max(0,g-d)*Math.max(0,y-h),s=ht(o)+ht(i),a<l?(l=a,u=n,c=s<c?s:c):a===l&&s<c&&(c=s,u=n);return u},_chooseSplitAxis:function(t,e,r){var n=t.leaf?this.compareMinX:ft,o=t.leaf?this.compareMinY:dt;this._allDistMargin(t,e,r,n)<this._allDistMargin(t,e,r,o)&&t.children.sort(n)},_allDistMargin:function(t,e,r,n){t.children.sort(n);var o,i,a=this.toBBox,s=ut(t,0,e,a),l=ut(t,r-e,r,a),c=gt(s)+gt(l);for(o=e;o<r-e;o++)i=t.children[o],pt(s,t.leaf?a(i):i),c+=gt(s);for(o=r-e-1;o>=e;o--)i=t.children[o],pt(l,t.leaf?a(i):i),c+=gt(l);return c},_adjustParentBBoxes:function(t,e,r){for(var n=r;n>=0;n--)pt(e[n],t)},_condense:function(t){for(var e,r=t.length-1;r>=0;r--)0===t[r].children.length?r>0?(e=t[r-1].children).splice(e.indexOf(t[r]),1):this.clear():ct(t[r],this.toBBox)},_initFormat:function(t){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(t[0])),this.compareMinY=new Function("a","b",e.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};const Et=st;function wt(t){var e=[t[0],t[1]],r=[t[0],t[3]],n=[t[2],t[3]];return{type:"Feature",bbox:t,properties:{},geometry:{type:"Polygon",coordinates:[[e,[t[2],t[1]],n,r,e]]}}}function xt(t){var e=[1/0,1/0,-1/0,-1/0];return Q(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e}const Pt=function(t){var e=Et(t);return e.insert=function(t){if(Array.isArray(t)){var e=t;(t=wt(e)).bbox=e}else t.bbox=t.bbox?t.bbox:xt(t);return Et.prototype.insert.call(this,t)},e.load=function(t){var e=[];return Array.isArray(t)?t.forEach((function(t){var r=wt(t);r.bbox=t,e.push(r)})):tt(t,(function(t){t.bbox=t.bbox?t.bbox:xt(t),e.push(t)})),Et.prototype.load.call(this,e)},e.remove=function(t){if(Array.isArray(t)){var e=t;(t=wt(e)).bbox=e}return Et.prototype.remove.call(this,t)},e.clear=function(){return Et.prototype.clear.call(this)},e.search=function(t){return{type:"FeatureCollection",features:Et.prototype.search.call(this,this.toBBox(t))}},e.collides=function(t){return Et.prototype.collides.call(this,this.toBBox(t))},e.all=function(){return{type:"FeatureCollection",features:Et.prototype.all.call(this)}},e.toJSON=function(){return Et.prototype.toJSON.call(this)},e.fromJSON=function(t){return Et.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var e;return{minX:(e=t.bbox?t.bbox:Array.isArray(t)&&4===t.length?t:xt(t))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e};const Ot=function(t){if(!t)throw new Error("geojson is required");var e=[];return rt(t,(function(t){!function(t,e){var r=[],n=t.geometry;switch(n.type){case"Polygon":r=Z(n);break;case"LineString":r=[Z(n)]}r.forEach((function(r){(function(t,e){var r=[];return t.reduce((function(t,n){var o,i,a,s,l,c,u=D([t,n],e);return u.bbox=(i=n,a=(o=t)[0],s=o[1],l=i[0],c=i[1],[a<l?a:l,s<c?s:c,a>l?a:l,s>c?s:c]),r.push(u),n})),r})(r,t.properties).forEach((function(t){t.id=e.length,e.push(t)}))}))}(t,e)})),R(e)};function Mt(t,e){var r=Z(t),n=Z(e);if(2!==r.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var o=r[0][0],i=r[0][1],a=r[1][0],s=r[1][1],l=n[0][0],c=n[0][1],u=n[1][0],p=n[1][1],f=(p-c)*(a-o)-(u-l)*(s-i),d=(u-l)*(i-c)-(p-c)*(o-l),h=(a-o)*(i-c)-(s-i)*(o-l);if(0===f)return null;var g=d/f,y=h/f;return g>=0&&g<=1&&y>=0&&y<=1?F([o+g*(a-o),i+g*(s-i)]):null}const _t=function(t,e){var r={},n=[];if("LineString"===t.type&&(t=N(t)),"LineString"===e.type&&(e=N(e)),"Feature"===t.type&&"Feature"===e.type&&"LineString"===t.geometry.type&&"LineString"===e.geometry.type&&2===t.geometry.coordinates.length&&2===e.geometry.coordinates.length){var o=Mt(t,e);return o&&n.push(o),R(n)}var i=Pt();return i.load(Ot(e)),tt(Ot(t),(function(t){tt(i.search(t),(function(e){var o=Mt(t,e);if(o){var i=Z(o).join(",");r[i]||(r[i]=!0,n.push(o))}}))})),R(n)};function St(t,e){return t.length>1?k(t,e):D(t[0],e)}const Lt=function(t,e){if(!Y(e=e||{}))throw new Error("options is invalid");var r=e.properties,n=function(t,e){if(!t)throw new Error((e||"geojson")+" is required");if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error((e||"geojson")+" is invalid")}(t),o=Z(t);if(r=r||t.properties||{},!o.length)throw new Error("polygon must contain coordinates");switch(n){case"Polygon":return St(o,r);case"MultiPolygon":var i=[];return o.forEach((function(t){i.push(St(t,r))})),R(i);default:throw new Error("geom "+n+" not supported")}};function Ct(t,e){for(var r=0;r<t.coordinates.length-1;r++)if(It(t.coordinates[r],t.coordinates[r+1],e.coordinates))return!0;return!1}function Tt(t,e){for(var r=0;r<e.coordinates.length;r++)if(W(e.coordinates[r],t))return!0;return _t(e,Lt(t)).features.length>0}function It(t,e,r){var n=r[0]-t[0],o=r[1]-t[1],i=e[0]-t[0],a=e[1]-t[1];return 0==n*a-o*i&&(Math.abs(i)>=Math.abs(a)?i>0?t[0]<=r[0]&&r[0]<=e[0]:e[0]<=r[0]&&r[0]<=t[0]:a>0?t[1]<=r[1]&&r[1]<=e[1]:e[1]<=r[1]&&r[1]<=t[1])}const At=function(t,e){var r;return rt(t,(function(t){rt(e,(function(e){if(!1===r)return!1;r=function(t,e){switch(t.type){case"Point":switch(e.type){case"Point":return r=t.coordinates,n=e.coordinates,!(r[0]===n[0]&&r[1]===n[1]);case"LineString":return!Ct(e,t);case"Polygon":return!W(t,e)}break;case"LineString":switch(e.type){case"Point":return!Ct(t,e);case"LineString":return!function(t,e){if(_t(t,e).features.length>0)return!0;return!1}(t,e);case"Polygon":return!Tt(e,t)}break;case"Polygon":switch(e.type){case"Point":return!W(e,t);case"LineString":return!Tt(t,e);case"Polygon":return!function(t,e){for(var r=0;r<t.coordinates[0].length;r++)if(W(t.coordinates[0][r],e))return!0;for(var n=0;n<e.coordinates[0].length;n++)if(W(e.coordinates[0][n],t))return!0;if(_t(Lt(t),Lt(e)).features.length>0)return!0;return!1}(e,t)}}var r,n}(t.geometry,e.geometry)}))})),r};const Nt=function(t,e,r){if(!Y(r=r||{}))throw new Error("options is invalid");var n=r.units,o=z(t),i=z(e),a=G(i[1]-o[1]),s=G(i[0]-o[0]),l=G(o[1]),c=G(i[1]),u=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(l)*Math.cos(c);return U(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)),n)};function Ft(t,e,r){if(!Y(r=r||{}))throw new Error("options is invalid");if(!0===r.final)return function(t,e){var r=Ft(e,t);return r=(r+180)%360}(t,e);var n=z(t),o=z(e),i=G(n[0]),a=G(o[0]),s=G(n[1]),l=G(o[1]),c=Math.sin(a-i)*Math.cos(l),u=Math.cos(s)*Math.sin(l)-Math.sin(s)*Math.cos(l)*Math.cos(a-i);return B(Math.atan2(c,u))}const jt=Ft;const Dt=function(t,e,r,n){if(!Y(n=n||{}))throw new Error("options is invalid");var o=n.units,i=n.properties,a=z(t),s=G(a[0]),l=G(a[1]),c=G(r),u=V(e,o),p=Math.asin(Math.sin(l)*Math.cos(u)+Math.cos(l)*Math.sin(u)*Math.cos(c));return F([B(s+Math.atan2(Math.sin(c)*Math.sin(u)*Math.cos(l),Math.cos(u)-Math.sin(l)*Math.sin(p))),B(p)],i)};const Rt=function(t,e,r){if(!Y(r=r||{}))throw new Error("options is invalid");var n=t.geometry?t.geometry.type:t.type;if("LineString"!==n&&"MultiLineString"!==n)throw new Error("lines must be LineString or MultiLineString");var o=F([1/0,1/0],{dist:1/0}),i=0;return rt(t,(function(t){for(var n=Z(t),a=0;a<n.length-1;a++){var s=F(n[a]);s.properties.dist=Nt(e,s,r);var l=F(n[a+1]);l.properties.dist=Nt(e,l,r);var c=Nt(s,l,r),u=Math.max(s.properties.dist,l.properties.dist),p=jt(s,l),f=Dt(e,u,p+90,r),d=Dt(e,u,p-90,r),h=_t(D([f.geometry.coordinates,d.geometry.coordinates]),D([s.geometry.coordinates,l.geometry.coordinates])),g=null;h.features.length>0&&((g=h.features[0]).properties.dist=Nt(e,g,r),g.properties.location=i+Nt(s,g,r)),s.properties.dist<o.properties.dist&&((o=s).properties.index=a,o.properties.location=i),l.properties.dist<o.properties.dist&&((o=l).properties.index=a+1,o.properties.location=i+c),g&&g.properties.dist<o.properties.dist&&((o=g).properties.index=a),i+=c}})),o};const kt=function(t,e){var r=Nt(t,e),n=jt(t,e);return Dt(t,r/2,n)};function Ut(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,o,i=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return Vt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Vt(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Vt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Bt="VERTICAL_GUIDE",Gt="HORIZONTAL_GUIDE",Xt=function(t,e,r,n){var o=t.getCanvas(),i=o.width,a=o.height,s=t.project(r),l=s.x,c=s.y;(l>0&&l<i&&c>0&&c<a||n)&&e.push(r)},Yt=function(t,e,r){var n,o,i,a,l,c=e.getAll().features,u=[],p=(n=t.getCanvas(),o=n.width,i=n.height,t.unproject([0,0]).toArray(),a=t.unproject([o,0]).toArray(),t.unproject([o,i]).toArray(),l=t.unproject([0,i]).toArray(),J([l,a].flat())),f=[],d=function e(r){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!Array.isArray(r))throw Error("Your array is not an array");Array.isArray(r[0])?r.forEach((function(t){e(t)})):2===r.length&&Xt(t,f,r,n)};return c.forEach((function(t){t.id!==r.id?t.id!==Gt&&t.id!==Bt&&(d(t.geometry.coordinates),At(p,t)||u.push(t)):r.type===s.POLYGON&&d(t.geometry.coordinates[0].slice(0,-2),!0)})),[u,f]};function $t(t,e){var r=t.map((function(t){return{feature:t,point:Rt(t,e)}}));return r.sort((function(t,e){return t.point.properties.dist-e.point.properties.dist})),{feature:r[0].feature,point:r[0].point}}var qt=function(t,e){var r={};return e.forEach((function(e,n){var o=function(t,e){var r,n=[t.lng,t.lat],o="Point"===e.geometry.type,i="Polygon"===e.geometry.type,a="MultiPolygon"===e.geometry.type,s=void 0,l=Z(e);if(o){var c=Ut(l,2);return{latlng:{lng:c[0],lat:c[1]},distance:Nt(l,n)}}if(s=i||a?Lt(e):e,i){var u=$t("LineString"===s.geometry.type?[D(s.geometry.coordinates)]:s.geometry.coordinates.map((function(t){return D(t)})),n);s=u.feature,r=u.point}else if(a){var p=$t(s.features.map((function(t){return"LineString"===t.geometry.type?[t.geometry.coordinates]:t.geometry.coordinates})).flatMap((function(t){return t})).map((function(t){return D(t)})),n);s=p.feature,r=p.point}else r=Rt(s,n);var f=Ut(r.geometry.coordinates,2),d=f[0],h=f[1],g=r.properties.index;return g+1===s.geometry.coordinates.length&&g--,{latlng:{lng:d,lat:h},segment:s.geometry.coordinates.slice(g,g+2),distance:r.properties.dist,isMarker:o}}(t,e);(void 0===r.distance||o.distance<r.distance)&&((r=o).layer=e)})),r};function Jt(t,e,r){var n=t.segment[0],o=t.segment[1],i=[t.latlng.lng,t.latlng.lat],a=Nt(n,i),s=Nt(o,i),l=a<s?n:o,c=a<s?a:s;if(e&&e.snapToMidPoints){var u=kt(n,o).geometry.coordinates,p=Nt(u,i);p<a&&p<s&&(l=u,c=p)}var f=Ut(c<r?l:i,2);return{lng:f[0],lat:f[1]}}function zt(t){return t.latlng}var Zt=function(t,e){var r,n,o,i,a,s,l,c,u,p,f,d,h=e.lngLat.lng,g=e.lngLat.lat;if(e.originalEvent.altKey)return t.showVerticalSnapLine=!1,t.showHorizontalSnapLine=!1,{lng:h,lat:g};if(t.snapList.length<=0)return{lng:h,lat:g};if(t.options.snap){if(r=qt({lng:h,lat:g},t.snapList),0===Object.keys(r).length)return!1;var y=r.isMarker,m=t.options.snapOptions?t.options.snapOptions.snapVertexPriorityDistance:void 0;o=y?r.latlng:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1.25;return Array.isArray(t.segment)?Jt(t,e,r):zt(t)}(r,t.options.snapOptions,m),n=(t.options.snapOptions&&t.options.snapOptions.snapPx||15)*(i=o.lat,a=t.map.getZoom(),s=i*(Math.PI/180),40075017*Math.cos(s)/Math.pow(2,a+8))}if(t.options.guides){var b=(u=t.vertices,p=e.lngLat,f=[],d=[],u.forEach((function(t){f.push(t[0]),d.push(t[1])})),{verticalPx:f.find((function(t){return Math.abs(t-p.lng)<.009})),horizontalPx:d.find((function(t){return Math.abs(t-p.lat)<.009}))});if(c=b.horizontalPx,l=b.verticalPx){var v={lng:l,lat:e.lngLat.lat+10},E={lng:l,lat:e.lngLat.lat-10};t.verticalGuide.updateCoordinate(0,v.lng,v.lat),t.verticalGuide.updateCoordinate(1,E.lng,E.lat)}if(c){var w={lng:e.lngLat.lng+10,lat:c},x={lng:e.lngLat.lng-10,lat:c};t.horizontalGuide.updateCoordinate(0,w.lng,w.lat),t.horizontalGuide.updateCoordinate(1,x.lng,x.lat)}t.showVerticalSnapLine=!!l,t.showHorizontalSnapLine=!!c}return r&&1e3*r.distance<n?o:l||c?(l&&(h=l),c&&(g=c),{lng:h,lat:g}):{lng:h,lat:g}},Ht=function(t){return{id:t,type:s.FEATURE,properties:{isSnapGuide:"true"},geometry:{type:s.LINE_STRING,coordinates:[]}}},Kt=function(t,e){return!(e.properties.id!==Bt||t.options.guides&&t.showVerticalSnapLine)||!(e.properties.id!==Gt||t.options.guides&&t.showHorizontalSnapLine)};function Wt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,o,i=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return Qt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Qt(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Qt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function te(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function ee(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var re=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?te(Object(r),!0).forEach((function(e){ee(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):te(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},T);re.onSetup=function(t){var e=this,r=this.newFeature({type:s.FEATURE,properties:{},geometry:{type:s.POINT,coordinates:[[]]}}),n=this.newFeature(Ht(Bt)),o=this.newFeature(Ht(Gt));this.addFeature(r),this.addFeature(n),this.addFeature(o);var i=this.getSelected();this.clearSelectedFeatures(),E.disable(this);var a=Wt(Yt(this.map,this._ctx.api,r),2),l=a[0],c=a[1],u={map:this.map,point:r,vertices:c,snapList:l,selectedFeatures:i,verticalGuide:n,horizontalGuide:o};u.options=this._ctx.options;var p=function(){var t=Wt(Yt(e.map,e._ctx.api,r),2),n=t[0],o=t[1];u.vertices=o,u.snapList=n};u.moveendCallback=p;var f=function(t){u.options=t};return u.optionsChangedCallBAck=f,this.map.on("moveend",p),this.map.on("draw.snap.options_changed",f),u},re.onClick=function(t){T.onClick.call(this,t,{lngLat:{lng:t.snappedLng,lat:t.snappedLat}})},re.onMouseMove=function(t,e){var r=Zt(t,e),n=r.lng,o=r.lat;t.snappedLng=n,t.snappedLat=o,t.lastVertex&&t.lastVertex[0]===n&&t.lastVertex[1]===o?this.updateUIClasses({mouse:i.POINTER}):this.updateUIClasses({mouse:i.ADD})},re.toDisplayFeatures=function(t,e,r){Kt(t,e)||T.toDisplayFeatures(t,e,r)},re.onStop=function(t){this.deleteFeature(Bt,{silent:!0}),this.deleteFeature(Gt,{silent:!0}),this.map.off("moveend",t.moveendCallback),T.onStop.call(this,t)};const ne=re;const oe=function(t,e){return!!t.lngLat&&(t.lngLat.lng===e[0]&&t.lngLat.lat===e[1])};function ie(t,e,r,n){return{type:s.FEATURE,properties:{meta:p.VERTEX,parent:t,coord_path:r,active:n?f.ACTIVE:f.INACTIVE},geometry:{type:s.POINT,coordinates:e}}}const ae={onSetup:function(t){const e=(t=t||{}).featureId;let r,n,o="forward";if(e){if(r=this.getFeature(e),!r)throw new Error("Could not find a feature with the provided featureId");let i=t.from;if(i&&"Feature"===i.type&&i.geometry&&"Point"===i.geometry.type&&(i=i.geometry),i&&"Point"===i.type&&i.coordinates&&2===i.coordinates.length&&(i=i.coordinates),!i||!Array.isArray(i))throw new Error("Please use the `from` property to indicate which point to continue the line from");const a=r.coordinates.length-1;if(r.coordinates[a][0]===i[0]&&r.coordinates[a][1]===i[1])n=a+1,r.addCoordinate(n,...r.coordinates[a]);else{if(r.coordinates[0][0]!==i[0]||r.coordinates[0][1]!==i[1])throw new Error("`from` should match the point at either the start or the end of the provided LineString");o="backwards",n=0,r.addCoordinate(n,...r.coordinates[0])}}else r=this.newFeature({type:s.FEATURE,properties:{},geometry:{type:s.LINE_STRING,coordinates:[]}}),n=0,this.addFeature(r);return this.clearSelectedFeatures(),E.disable(this),this.updateUIClasses({mouse:i.ADD}),this.activateUIButton(a.LINE),this.setActionableState({trash:!0}),{line:r,currentVertexPosition:n,direction:o}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&oe(e,t.line.coordinates[t.currentVertexPosition-1])||"backwards"===t.direction&&oe(e,t.line.coordinates[t.currentVertexPosition+1]))return this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.line.id]});this.updateUIClasses({mouse:i.ADD}),t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),"forward"===t.direction?(t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)):t.line.addCoordinate(0,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.line.id]})},onMouseMove:function(t,e){t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),M(e)&&this.updateUIClasses({mouse:i.POINTER})}};ae.onTap=ae.onClick=function(t,e){if(M(e))return this.clickOnVertex(t,e);this.clickAnywhere(t,e)},ae.onKeyUp=function(t,e){L(e)?this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.line.id]}):S(e)&&(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(l.SIMPLE_SELECT))},ae.onStop=function(t){E.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.line.id)&&(t.line.removeCoordinate(`${t.currentVertexPosition}`),t.line.isValid()?this.map.fire(c.CREATE,{features:[t.line.toGeoJSON()]}):(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(l.SIMPLE_SELECT,{},{silent:!0})))},ae.onTrash=function(t){this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(l.SIMPLE_SELECT)},ae.toDisplayFeatures=function(t,e,r){const n=e.properties.id===t.line.id;if(e.properties.active=n?f.ACTIVE:f.INACTIVE,!n)return r(e);e.geometry.coordinates.length<2||(e.properties.meta=p.FEATURE,r(ie(t.line.id,e.geometry.coordinates["forward"===t.direction?e.geometry.coordinates.length-2:1],""+("forward"===t.direction?e.geometry.coordinates.length-2:1),!1)),r(e))};const se=ae;function le(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,o,i=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return ce(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return ce(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ce(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function ue(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function pe(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var fe=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ue(Object(r),!0).forEach((function(e){pe(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ue(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},se);fe.onSetup=function(t){var e=this,r=this.newFeature({type:s.FEATURE,properties:{},geometry:{type:s.LINE_STRING,coordinates:[[]]}}),n=this.newFeature(Ht(Bt)),o=this.newFeature(Ht(Gt));this.addFeature(r),this.addFeature(n),this.addFeature(o);var i=this.getSelected();this.clearSelectedFeatures(),E.disable(this);var a=le(Yt(this.map,this._ctx.api,r),2),l=a[0],c=a[1],u={map:this.map,line:r,currentVertexPosition:0,vertices:c,snapList:l,selectedFeatures:i,verticalGuide:n,horizontalGuide:o,direction:"forward"};u.options=this._ctx.options;var p=function(){var t=le(Yt(e.map,e._ctx.api,r),2),n=t[0],o=t[1];u.vertices=o,u.snapList=n};u.moveendCallback=p;var f=function(t){u.options=t};return u.optionsChangedCallBAck=f,this.map.on("moveend",p),this.map.on("draw.snap.options_changed",f),u},fe.onClick=function(t){var e=t.snappedLng,r=t.snappedLat;if(t.currentVertexPosition>0){var n=t.line.coordinates[t.currentVertexPosition-1];if(t.lastVertex=n,n[0]===e&&n[1]===r)return this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.line.id]})}Xt(t.map,t.vertices,{lng:e,lat:r}),t.line.updateCoordinate(t.currentVertexPosition,e,r),t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e,r)},fe.onMouseMove=function(t,e){var r=Zt(t,e),n=r.lng,o=r.lat;t.line.updateCoordinate(t.currentVertexPosition,n,o),t.snappedLng=n,t.snappedLat=o,t.lastVertex&&t.lastVertex[0]===n&&t.lastVertex[1]===o?this.updateUIClasses({mouse:i.POINTER}):this.updateUIClasses({mouse:i.ADD})},fe.toDisplayFeatures=function(t,e,r){Kt(t,e)||se.toDisplayFeatures(t,e,r)},fe.onStop=function(t){this.deleteFeature(Bt,{silent:!0}),this.deleteFeature(Gt,{silent:!0}),this.map.off("moveend",t.moveendCallback),se.onStop.call(this,t)};const de=fe,he={onSetup:function(){const t=this.newFeature({type:s.FEATURE,properties:{},geometry:{type:s.POLYGON,coordinates:[[]]}});return this.addFeature(t),this.clearSelectedFeatures(),E.disable(this),this.updateUIClasses({mouse:i.ADD}),this.activateUIButton(a.POLYGON),this.setActionableState({trash:!0}),{polygon:t,currentVertexPosition:0}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&oe(e,t.polygon.coordinates[0][t.currentVertexPosition-1]))return this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.polygon.id]});this.updateUIClasses({mouse:i.ADD}),t.polygon.updateCoordinate(`0.${t.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat),t.currentVertexPosition++,t.polygon.updateCoordinate(`0.${t.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},onMouseMove:function(t,e){t.polygon.updateCoordinate(`0.${t.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat),M(e)&&this.updateUIClasses({mouse:i.POINTER})}};he.onTap=he.onClick=function(t,e){return M(e)?this.clickOnVertex(t,e):this.clickAnywhere(t,e)},he.onKeyUp=function(t,e){S(e)?(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(l.SIMPLE_SELECT)):L(e)&&this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},he.onStop=function(t){this.updateUIClasses({mouse:i.NONE}),E.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.polygon.id)&&(t.polygon.removeCoordinate(`0.${t.currentVertexPosition}`),t.polygon.isValid()?this.map.fire(c.CREATE,{features:[t.polygon.toGeoJSON()]}):(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(l.SIMPLE_SELECT,{},{silent:!0})))},he.toDisplayFeatures=function(t,e,r){const n=e.properties.id===t.polygon.id;if(e.properties.active=n?f.ACTIVE:f.INACTIVE,!n)return r(e);if(0===e.geometry.coordinates.length)return;const o=e.geometry.coordinates[0].length;if(!(o<3)){if(e.properties.meta=p.FEATURE,r(ie(t.polygon.id,e.geometry.coordinates[0][0],"0.0",!1)),o>3){const n=e.geometry.coordinates[0].length-3;r(ie(t.polygon.id,e.geometry.coordinates[0][n],`0.${n}`,!1))}if(o<=4){const t=[[e.geometry.coordinates[0][0][0],e.geometry.coordinates[0][0][1]],[e.geometry.coordinates[0][1][0],e.geometry.coordinates[0][1][1]]];if(r({type:s.FEATURE,properties:e.properties,geometry:{coordinates:t,type:s.LINE_STRING}}),3===o)return}return r(e)}},he.onTrash=function(t){this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(l.SIMPLE_SELECT)};const ge=he;function ye(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,o,i=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return me(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return me(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function me(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function be(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function ve(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var Ee=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?be(Object(r),!0).forEach((function(e){ve(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):be(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},ge);Ee.onSetup=function(t){var e=this,r=this.newFeature({type:s.FEATURE,properties:{},geometry:{type:s.POLYGON,coordinates:[[]]}}),n=this.newFeature(Ht(Bt)),o=this.newFeature(Ht(Gt));this.addFeature(r),this.addFeature(n),this.addFeature(o);var i=this.getSelected();this.clearSelectedFeatures(),E.disable(this);var a=ye(Yt(this.map,this._ctx.api,r),2),l=a[0],c=a[1],u={map:this.map,polygon:r,currentVertexPosition:0,vertices:c,snapList:l,selectedFeatures:i,verticalGuide:n,horizontalGuide:o};u.options=this._ctx.options;var p=function(){var t=ye(Yt(e.map,e._ctx.api,r),2),n=t[0],o=t[1];u.vertices=o,u.snapList=n};u.moveendCallback=p;var f=function(t){u.options=t};return u.optionsChangedCallBAck=f,this.map.on("moveend",p),this.map.on("draw.snap.options_changed",f),u},Ee.onClick=function(t){var e=t.snappedLng,r=t.snappedLat;if(t.currentVertexPosition>0){var n=t.polygon.coordinates[0][t.currentVertexPosition-1];if(t.lastVertex=n,n[0]===e&&n[1]===r)return this.changeMode(l.SIMPLE_SELECT,{featureIds:[t.polygon.id]})}Xt(t.map,t.vertices,{lng:e,lat:r}),t.polygon.updateCoordinate("0.".concat(t.currentVertexPosition),e,r),t.currentVertexPosition++,t.polygon.updateCoordinate("0.".concat(t.currentVertexPosition),e,r)},Ee.onMouseMove=function(t,e){var r=Zt(t,e),n=r.lng,o=r.lat;t.polygon.updateCoordinate("0.".concat(t.currentVertexPosition),n,o),t.snappedLng=n,t.snappedLat=o,t.lastVertex&&t.lastVertex[0]===n&&t.lastVertex[1]===o?this.updateUIClasses({mouse:i.POINTER}):this.updateUIClasses({mouse:i.ADD})},Ee.toDisplayFeatures=function(t,e,r){Kt(t,e)||ge.toDisplayFeatures(t,e,r)},Ee.onStop=function(t){this.deleteFeature(Bt,{silent:!0}),this.deleteFeature(Gt,{silent:!0}),this.map.off("moveend",t.moveendCallback),this.map.off("draw.snap.options_changed",t.optionsChangedCallBAck),ge.onStop.call(this,t)};const we=Ee;const xe=function t(e,r={},n=null){const{type:o,coordinates:i}=e.geometry,a=e.properties&&e.properties.id;let l=[];function c(t,e){let n="",o=null;t.forEach(((t,i)=>{const c=null!=e?`${e}.${i}`:String(i),f=ie(a,t,c,u(c));if(r.midpoints&&o){const t=function(t,e,r){const n=e.geometry.coordinates,o=r.geometry.coordinates;if(n[1]>m||n[1]<g||o[1]>m||o[1]<g)return null;const i={lng:(n[0]+o[0])/2,lat:(n[1]+o[1])/2};return{type:s.FEATURE,properties:{meta:p.MIDPOINT,parent:t,lng:i.lng,lat:i.lat,coord_path:r.properties.coord_path},geometry:{type:s.POINT,coordinates:[i.lng,i.lat]}}}(a,o,f);t&&l.push(t)}o=f;const d=JSON.stringify(t);n!==d&&l.push(f),0===i&&(n=d)}))}function u(t){return!!r.selectedPaths&&-1!==r.selectedPaths.indexOf(t)}return o===s.POINT?l.push(ie(a,i,n,u(n))):o===s.POLYGON?i.forEach(((t,e)=>{c(t,null!==n?`${n}.${e}`:String(e))})):o===s.LINE_STRING?c(i,n):0===o.indexOf(s.MULTI_PREFIX)&&function(){const n=o.replace(s.MULTI_PREFIX,"");i.forEach(((o,i)=>{const a={type:s.FEATURE,properties:e.properties,geometry:{type:n,coordinates:o}};l=l.concat(t(a,r,i))}))}(),l};var Pe=r(319),Oe=r.n(Pe);const{LAT_MIN:Me,LAT_MAX:_e,LAT_RENDERED_MIN:Se,LAT_RENDERED_MAX:Le,LNG_MIN:Ce,LNG_MAX:Te}=t;function Ie(t,e){let r=Me,n=_e,o=Me,i=_e,a=Te,s=Ce;t.forEach((t=>{const e=Oe()(t),l=e[1],c=e[3],u=e[0],p=e[2];l>r&&(r=l),c<n&&(n=c),c>o&&(o=c),l<i&&(i=l),u<a&&(a=u),p>s&&(s=p)}));const l=e;return r+l.lat>Le&&(l.lat=Le-r),o+l.lat>_e&&(l.lat=_e-o),n+l.lat<Se&&(l.lat=Se-n),i+l.lat<Me&&(l.lat=Me-i),a+l.lng<=Ce&&(l.lng+=360*Math.ceil(Math.abs(l.lng)/360)),s+l.lng>=Te&&(l.lng-=360*Math.ceil(Math.abs(l.lng)/360)),l}const Ae=w(p.VERTEX),Ne=w(p.MIDPOINT),Fe={fireUpdate:function(){this.map.fire(c.UPDATE,{action:u.CHANGE_COORDINATES,features:this.getSelected().map((t=>t.toGeoJSON()))})},fireActionable:function(t){this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:t.selectedCoordPaths.length>0})},startDragging:function(t,e){this.map.dragPan.disable(),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},stopDragging:function(t){this.map.dragPan.enable(),t.dragMoving=!1,t.canDragMove=!1,t.dragMoveLocation=null},onVertex:function(t,e){this.startDragging(t,e);const r=e.featureTarget.properties,n=t.selectedCoordPaths.indexOf(r.coord_path);_(e)||-1!==n?_(e)&&-1===n&&t.selectedCoordPaths.push(r.coord_path):t.selectedCoordPaths=[r.coord_path];const o=this.pathsToCoordinates(t.featureId,t.selectedCoordPaths);this.setSelectedCoordinates(o)},onMidpoint:function(t,e){this.startDragging(t,e);const r=e.featureTarget.properties;t.feature.addCoordinate(r.coord_path,r.lng,r.lat),this.fireUpdate(),t.selectedCoordPaths=[r.coord_path]},pathsToCoordinates:function(t,e){return e.map((e=>({feature_id:t,coord_path:e})))},onFeature:function(t,e){0===t.selectedCoordPaths.length?this.startDragging(t,e):this.stopDragging(t)}};Fe.dragFeature=function(t,e,r){!function(t,e){const r=Ie(t.map((t=>t.toGeoJSON())),e);t.forEach((t=>{const e=t.getCoordinates(),n=t=>{const e={lng:t[0]+r.lng,lat:t[1]+r.lat};return[e.lng,e.lat]},o=t=>t.map((t=>n(t))),i=t=>t.map((t=>o(t)));let a;t.type===s.POINT?a=n(e):t.type===s.LINE_STRING||t.type===s.MULTI_POINT?a=e.map(n):t.type===s.POLYGON||t.type===s.MULTI_LINE_STRING?a=e.map(o):t.type===s.MULTI_POLYGON&&(a=e.map(i)),t.incomingCoords(a)}))}(this.getSelected(),r),t.dragMoveLocation=e.lngLat},Fe.dragVertex=function(t,e,r){const n=t.selectedCoordPaths.map((e=>t.feature.getCoordinate(e))),o=Ie(n.map((t=>({type:s.FEATURE,properties:{},geometry:{type:s.POINT,coordinates:t}}))),r);for(let e=0;e<n.length;e++){const r=n[e];t.feature.updateCoordinate(t.selectedCoordPaths[e],r[0]+o.lng,r[1]+o.lat)}},Fe.clickNoTarget=function(){this.changeMode(l.SIMPLE_SELECT)},Fe.clickInactive=function(){this.changeMode(l.SIMPLE_SELECT)},Fe.clickActiveFeature=function(t){t.selectedCoordPaths=[],this.clearSelectedCoordinates(),t.feature.changed()},Fe.onSetup=function(t){const e=t.featureId,r=this.getFeature(e);if(!r)throw new Error("You must provide a featureId to enter direct_select mode");if(r.type===s.POINT)throw new TypeError("direct_select mode doesn't handle point features");const n={featureId:e,feature:r,dragMoveLocation:t.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:t.coordPath?[t.coordPath]:[]};return this.setSelectedCoordinates(this.pathsToCoordinates(e,n.selectedCoordPaths)),this.setSelected(e),E.disable(this),this.setActionableState({trash:!0}),n},Fe.onStop=function(){E.enable(this),this.clearSelectedCoordinates()},Fe.toDisplayFeatures=function(t,e,r){t.featureId===e.properties.id?(e.properties.active=f.ACTIVE,r(e),xe(e,{map:this.map,midpoints:!0,selectedPaths:t.selectedCoordPaths}).forEach(r)):(e.properties.active=f.INACTIVE,r(e)),this.fireActionable(t)},Fe.onTrash=function(t){t.selectedCoordPaths.sort(((t,e)=>e.localeCompare(t,"en",{numeric:!0}))).forEach((e=>t.feature.removeCoordinate(e))),this.fireUpdate(),t.selectedCoordPaths=[],this.clearSelectedCoordinates(),this.fireActionable(t),!1===t.feature.isValid()&&(this.deleteFeature([t.featureId]),this.changeMode(l.SIMPLE_SELECT,{}))},Fe.onMouseMove=function(t,e){const r=x(e),n=Ae(e),o=0===t.selectedCoordPaths.length;return r&&o||n&&!o?this.updateUIClasses({mouse:i.MOVE}):this.updateUIClasses({mouse:i.NONE}),this.stopDragging(t),!0},Fe.onMouseOut=function(t){return t.dragMoving&&this.fireUpdate(),!0},Fe.onTouchStart=Fe.onMouseDown=function(t,e){return Ae(e)?this.onVertex(t,e):x(e)?this.onFeature(t,e):Ne(e)?this.onMidpoint(t,e):void 0},Fe.onDrag=function(t,e){if(!0!==t.canDragMove)return;t.dragMoving=!0,e.originalEvent.stopPropagation();const r={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};t.selectedCoordPaths.length>0?this.dragVertex(t,e,r):this.dragFeature(t,e,r),t.dragMoveLocation=e.lngLat},Fe.onClick=function(t,e){return O(e)?this.clickNoTarget(t,e):x(e)?this.clickActiveFeature(t,e):P(e)?this.clickInactive(t,e):void this.stopDragging(t)},Fe.onTap=function(t,e){return O(e)?this.clickNoTarget(t,e):x(e)?this.clickActiveFeature(t,e):P(e)?this.clickInactive(t,e):void 0},Fe.onTouchEnd=Fe.onMouseUp=function(t){t.dragMoving&&this.fireUpdate(),this.stopDragging(t)};const je=Fe;function De(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,o,i=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return Re(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Re(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Re(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function ke(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function Ue(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var Ve=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ke(Object(r),!0).forEach((function(e){Ue(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ke(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},je);Ve.onSetup=function(t){var e=t.featureId,r=this.getFeature(e);if(!r)throw new Error("You must provide a featureId to enter direct_select mode");if(r.type===s.POINT)throw new TypeError("direct_select mode doesn't handle point features");var n=De(Yt(this.map,this._ctx.api,r),2),o=n[0],i=n[1],a=this.newFeature(Ht(Bt)),l=this.newFeature(Ht(Gt));this.addFeature(a),this.addFeature(l);var c={map:this.map,featureId:e,feature:r,dragMoveLocation:t.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:t.coordPath?[t.coordPath]:[],vertices:i,snapList:o,verticalGuide:a,horizontalGuide:l};c.options=this._ctx.options,this.setSelectedCoordinates(this.pathsToCoordinates(e,c.selectedCoordPaths)),this.setSelected(e),E.disable(this),this.setActionableState({trash:!0});var u=function(t){c.options=t};return c.optionsChangedCallBAck=u,this.map.on("draw.snap.options_changed",u),c},Ve.dragVertex=function(t,e,r){var n=Zt(t,e),o=n.lng,i=n.lat;t.feature.updateCoordinate(t.selectedCoordPaths[0],o,i)},Ve.onStop=function(t){this.deleteFeature(Bt,{silent:!0}),this.deleteFeature(Gt,{silent:!0}),this.map.off("draw.snap.options_changed",t.optionsChangedCallBAck),je.onStop.call(this,t)};const Be=Ve;function Ge(t){return function(t){if(Array.isArray(t))return Xe(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return Xe(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Xe(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xe(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Ye(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function $e(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?Ye(Object(r),!0).forEach((function(e){qe(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):Ye(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function qe(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var Je=[{id:"gl-draw-polygon-fill-inactive",type:"fill",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","mode","static"]],paint:{"fill-color":"#3bb2d0","fill-outline-color":"#3bb2d0","fill-opacity":.1}},{id:"gl-draw-polygon-fill-active",type:"fill",filter:["all",["==","active","true"],["==","$type","Polygon"]],paint:{"fill-color":"#fbb03b","fill-outline-color":"#fbb03b","fill-opacity":.1}},{id:"gl-draw-polygon-midpoint",type:"circle",filter:["all",["==","$type","Point"],["==","meta","midpoint"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-stroke-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-polygon-stroke-active",type:"line",filter:["all",["==","active","true"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-line-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","LineString"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-line-active",type:"line",filter:["all",["==","$type","LineString"],["==","active","true"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-and-line-vertex-stroke-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-color":"#fff"}},{id:"gl-draw-polygon-and-line-vertex-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-point-point-stroke-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-opacity":1,"circle-color":"#fff"}},{id:"gl-draw-point-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#3bb2d0"}},{id:"gl-draw-point-stroke-active",type:"circle",filter:["all",["==","$type","Point"],["==","active","true"],["!=","meta","midpoint"]],paint:{"circle-radius":7,"circle-color":"#fff"}},{id:"gl-draw-point-active",type:"circle",filter:["all",["==","$type","Point"],["!=","meta","midpoint"],["==","active","true"]],paint:{"circle-radius":5,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-fill-static",type:"fill",filter:["all",["==","mode","static"],["==","$type","Polygon"]],paint:{"fill-color":"#404040","fill-outline-color":"#404040","fill-opacity":.1}},{id:"gl-draw-polygon-stroke-static",type:"line",filter:["all",["==","mode","static"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-line-static",type:"line",filter:["all",["==","mode","static"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-point-static",type:"circle",filter:["all",["==","mode","static"],["==","$type","Point"]],paint:{"circle-radius":5,"circle-color":"#404040"}}].map((function(t){return"gl-draw-line-inactive"===t.id?$e($e({},t),{},{filter:[].concat(Ge(t.filter),[["!=","user_isSnapGuide","true"]])}):t}));const ze=[].concat(Ge(Je),[{id:"guide",type:"line",filter:["all",["==","$type","LineString"],["==","user_isSnapGuide","true"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#c00c00","line-width":1,"line-dasharray":[5,5]}}])})(),n})()}));
//# sourceMappingURL=mapbox-gl-draw-snap-mode.js.map